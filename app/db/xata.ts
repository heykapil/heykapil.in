// Generated by Xata Codegen 0.28.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "views",
    columns: [
      { name: "count", type: "int", notNull: true, defaultValue: "0" },
      { name: "slug", type: "string", unique: true },
    ],
  },
  {
    name: "guestbook",
    columns: [
      {
        name: "email",
        type: "string",
        notNull: true,
        defaultValue: "user@example.com",
      },
      {
        name: "body",
        type: "string",
        notNull: true,
        defaultValue: "Lorem ipsum dolor sit amet, consectetur adip",
      },
      {
        name: "created_by",
        type: "string",
        notNull: true,
        defaultValue: "User Name",
      },
      {
        name: "image",
        type: "string",
        notNull: true,
        defaultValue: "https://cdn.kapil.app",
      },
      {
        name: "created_at",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      {
        name: "updated_at",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
    ],
  },
  {
    name: "redirects",
    columns: [
      { name: "source", type: "string" },
      {
        name: "destination",
        type: "string",
        notNull: true,
        defaultValue: "https://cdn.kapil.app",
      },
      { name: "permanent", type: "bool", notNull: true, defaultValue: "false" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Views = InferredTypes["views"];
export type ViewsRecord = Views & XataRecord;

export type Guestbook = InferredTypes["guestbook"];
export type GuestbookRecord = Guestbook & XataRecord;

export type Redirects = InferredTypes["redirects"];
export type RedirectsRecord = Redirects & XataRecord;

export type DatabaseSchema = {
  views: ViewsRecord;
  guestbook: GuestbookRecord;
  redirects: RedirectsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Kapil-Chaudhary-s-workspace-kmmi3f.ap-southeast-2.xata.sh/db/kapil",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
