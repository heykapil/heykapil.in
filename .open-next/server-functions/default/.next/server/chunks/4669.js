"use strict";exports.id=4669,exports.ids=[4669],exports.modules={84669:(e,t,s)=>{s.d(t,{getDefaultRoleAssumer:()=>C,getDefaultRoleAssumerWithWebIdentity:()=>h});var r=s(76327),n=s(11630),i=s(83295),o=s(36865),l=s(54504),a=s(3656);class c extends i.mY.classBuilder().ep({...o.q}).m(function(e,t,s,i){return[(0,n.p2)(s,this.serialize,this.deserialize),(0,r.a3)(s,e.getEndpointParameterInstructions())]}).s("AWSSecurityTokenServiceV20110615","AssumeRole",{}).n("STSClient","AssumeRoleCommand").f(void 0,l.TE).ser(a.db).de(a.oB).build(){}class d extends i.mY.classBuilder().ep({...o.q}).m(function(e,t,s,i){return[(0,n.p2)(s,this.serialize,this.deserialize),(0,r.a3)(s,e.getEndpointParameterInstructions())]}).s("AWSSecurityTokenServiceV20110615","AssumeRoleWithWebIdentity",{}).n("STSClient","AssumeRoleWithWebIdentityCommand").f(l.Cz,l.b4).ser(a.pO).de(a.l$).build(){}let u="us-east-1",p=e=>{if("string"==typeof e?.Arn){let t=e.Arn.split(":");if(t.length>4&&""!==t[4])return t[4]}},f=async(e,t,s)=>{let r="function"==typeof e?await e():e,n="function"==typeof t?await t():t;return s?.debug?.("@aws-sdk/client-sts::resolveRegion","accepting first of:",`${r} (provider)`,`${n} (parent client)`,`${u} (STS default)`),r??n??u},S=(e,t)=>{let s,r;return async(n,i)=>{if(r=n,!s){let{logger:n=e?.parentClientConfig?.logger,region:i,requestHandler:o=e?.parentClientConfig?.requestHandler,credentialProviderLogger:l}=e;s=new t({credentialDefaultProvider:()=>async()=>r,region:await f(i,e?.parentClientConfig?.region,l),requestHandler:y(o)?void 0:o,logger:n})}let{Credentials:o,AssumedRoleUser:l}=await s.send(new c(i));if(!o||!o.AccessKeyId||!o.SecretAccessKey)throw Error(`Invalid response from STS.assumeRole call with role ${i.RoleArn}`);let a=p(l);return{accessKeyId:o.AccessKeyId,secretAccessKey:o.SecretAccessKey,sessionToken:o.SessionToken,expiration:o.Expiration,...o.CredentialScope&&{credentialScope:o.CredentialScope},...a&&{accountId:a}}}},g=(e,t)=>{let s;return async r=>{if(!s){let{logger:r=e?.parentClientConfig?.logger,region:n,requestHandler:i=e?.parentClientConfig?.requestHandler,credentialProviderLogger:o}=e;s=new t({region:await f(n,e?.parentClientConfig?.region,o),requestHandler:y(i)?void 0:i,logger:r})}let{Credentials:n,AssumedRoleUser:i}=await s.send(new d(r));if(!n||!n.AccessKeyId||!n.SecretAccessKey)throw Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${r.RoleArn}`);let o=p(i);return{accessKeyId:n.AccessKeyId,secretAccessKey:n.SecretAccessKey,sessionToken:n.SessionToken,expiration:n.Expiration,...n.CredentialScope&&{credentialScope:n.CredentialScope},...o&&{accountId:o}}}},y=e=>e?.metadata?.handlerProtocol==="h2";var m=s(15633);let A=(e,t)=>t?class extends e{constructor(e){for(let s of(super(e),t))this.middlewareStack.use(s)}}:e,C=(e={},t)=>S(e,A(m.X,t)),h=(e={},t)=>g(e,A(m.X,t))}};